--- mozilla/toolkit/mozapps/installer/packager.mk.orig	2009-06-24 10:22:23.000000000 +0200
+++ mozilla/toolkit/mozapps/installer/packager.mk	2009-06-28 18:59:02.000000000 +0200
@@ -370,13 +370,13 @@
 # NOTE: this must be a tar now that dist links into the tree so that we
 # do not strip the binaries actually in the tree.
 	@echo "Creating package directory..."
-	@mkdir $(DIST)/$(MOZ_PKG_DIR)
+	@mkdir -p $(DESTDIR)$(MOZ_PKG_APPDIR)
 ifdef MOZ_PKG_MANIFEST
 	$(RM) -rf $(DIST)/xpt
 	$(call PACKAGER_COPY, "$(DIST)",\
-		 "$(DIST)/$(MOZ_PKG_DIR)", \
+		 "$(DESTDIR)/$(MOZ_PKG_APPDIR)", \
 		"$(MOZ_PKG_MANIFEST)", "$(PKGCP_OS)", 1, 0, 1)
-	$(PERL) $(MOZILLA_DIR)/xpinstall/packager/xptlink.pl -s $(DIST) -d $(DIST)/xpt -f $(DIST)/$(MOZ_PKG_DIR)/components -v -x "$(XPIDL_LINK)"
+	$(PERL) $(MOZILLA_DIR)/xpinstall/packager/xptlink.pl -s $(DIST) -d $(DIST)/xpt -f $(DESTDIR)/$(MOZ_PKG_APPDIR)/components -v -x "$(XPIDL_LINK)"
 else # !MOZ_PKG_MANIFEST
 ifeq ($(MOZ_PKG_FORMAT),DMG)
 # If UNIVERSAL_BINARY, the package will be made from an already-prepared
@@ -385,11 +385,11 @@
 ifndef STAGE_SDK
 	@cd $(DIST) && rsync -auv --copy-unsafe-links $(_APPNAME) $(MOZ_PKG_DIR)
 else
-	@cd $(DIST)/bin && tar $(TAR_CREATE_FLAGS) - * | (cd ../$(MOZ_PKG_DIR); tar -xf -)
+	cp -rfLp $(DIST)/bin/* $(DESTDIR)$(MOZ_PKG_APPDIR)
 endif
 endif
 else
-	@cd $(DIST)/bin && tar $(TAR_CREATE_FLAGS) - * | (cd ../$(MOZ_PKG_DIR); tar -xf -)
+	cp -rfLp $(DIST)/bin/* $(DESTDIR)$(MOZ_PKG_APPDIR)
 endif # DMG
 endif # MOZ_PKG_MANIFEST
 ifndef PKG_SKIP_STRIP
@@ -421,7 +421,7 @@
 endif
 	@echo "Removing unpackaged files..."
 ifdef NO_PKG_FILES
-	cd $(DIST)/$(STAGEPATH)$(MOZ_PKG_DIR)$(_BINPATH); rm -rf $(NO_PKG_FILES)
+	cd $(DESTDIR)$(MOZ_PKG_APPDIR)$(_BINPATH); rm -rf $(NO_PKG_FILES)
 endif
 ifdef MOZ_PKG_REMOVALS
 	$(SYSINSTALL) $(IFLAGS1) $(MOZ_PKG_REMOVALS_GEN) $(DIST)/$(STAGEPATH)$(MOZ_PKG_DIR)$(_BINPATH)
@@ -446,39 +446,47 @@
 	$(error "make install" is not supported on this platform. Use "make package" instead.)
 endif
 	$(NSINSTALL) -D $(DESTDIR)$(installdir)
-	(cd $(DIST)/$(MOZ_PKG_DIR) && tar $(TAR_CREATE_FLAGS) - .) | \
-	  (cd $(DESTDIR)$(installdir) && tar -xf -)
 	$(NSINSTALL) -D $(DESTDIR)$(bindir)
 	$(RM) -f $(DESTDIR)$(bindir)/$(MOZ_APP_NAME)
-	ln -s $(installdir)/$(MOZ_APP_NAME) $(DESTDIR)$(bindir)
+	ln -s $(installdir)/$(MOZ_APP_NAME)-bin $(DESTDIR)$(bindir)/$(MOZ_APP_NAME)
+	$(RM) -f $(DESTDIR)$(bindir)/regxpcom
+	ln -s $(installdir)/regxpcom $(DESTDIR)$(bindir)/regxpcom
+	$(RM) -f $(DESTDIR)$(bindir)/xpcshell
+	ln -s $(installdir)/xpcshell $(DESTDIR)$(bindir)/xpcshell
+	$(RM) -f $(DESTDIR)$(bindir)/xpidl
+	ln -s $(installdir)/xpidl $(DESTDIR)$(bindir)/xpidl
+	$(RM) -f $(DESTDIR)$(bindir)/xpt_dump
+	ln -s $(installdir)/xpt_dump $(DESTDIR)$(bindir)/xpt_dump
+	$(RM) -f $(DESTDIR)$(bindir)/xpt_link
+	ln -s $(installdir)/xpt_link $(DESTDIR)$(bindir)/xpt_link
 ifdef INSTALL_SDK # Here comes the hard part
 # include directory is stable (dist/sdk/include) and unstable (dist/include)
 	$(NSINSTALL) -D $(DESTDIR)$(includedir)/stable
-	$(NSINSTALL) -D $(DESTDIR)$(includedir)/unstable
-	(cd $(DIST)/sdk/include && tar $(TAR_CREATE_FLAGS) - .) | \
-	  (cd $(DESTDIR)$(includedir)/stable && tar -xf -)
+	cp -rfLp $(DIST)/sdk/include/* $(DESTDIR)$(includedir)/stable
 # The dist/include has module subdirectories that we need to flatten
-	find $(DIST)/include -xtype f -exec $(SYSINSTALL) $(IFLAGS1) {} $(DESTDIR)$(includedir)/unstable \;
+#	find $(DIST)/include -xtype f -exec $(SYSINSTALL) $(IFLAGS1) {} $(DESTDIR)$(includedir)/unstable \;
+	cp -rfLp $(DIST)/include/* $(DESTDIR)$(includedir)
 # IDL directory is stable (dist/sdk/idl) and unstable (dist/idl)
-	$(NSINSTALL) -D $(DESTDIR)$(idldir)/stable 
-	$(NSINSTALL) -D $(DESTDIR)$(idldir)/unstable
-	(cd $(DIST)/sdk/idl && tar $(TAR_CREATE_FLAGS) - .) | \
-	  (cd $(DESTDIR)$(idldir)/stable && tar -xf -)
-	(cd $(DIST)/idl && tar $(TAR_CREATE_FLAGS) - .) | \
-	  (cd $(DESTDIR)$(idldir)/unstable && tar -xf -)
+	$(NSINSTALL) -D $(DESTDIR)$(idldir)/stable
+	$(NSINSTALL) -D $(DESTDIR)$(idldir)
+	cp -rfLp $(DIST)/sdk/idl/* $(DESTDIR)$(idldir)/stable
+	cp -rfLp $(DIST)/idl/* $(DESTDIR)$(idldir)
 # SDK directory is the libs + a bunch of symlinks
 	$(NSINSTALL) -D $(DESTDIR)$(sdkdir)/sdk/lib
 	if test -f $(DIST)/sdk/include/xpcom-config.h; then \
 	  $(SYSINSTALL) $(IFLAGS1) $(DIST)/sdk/include/xpcom-config.h $(DESTDIR)$(sdkdir); \
 	fi
-	(cd $(DIST)/sdk/lib && tar $(TAR_CREATE_FLAGS) - .) | (cd $(DESTDIR)$(sdkdir)/sdk/lib && tar -xf -)
+	cp -rfLp $(DIST)/sdk/lib/*.a $(DESTDIR)$(sdkdir)/sdk/lib
+	ln -s $(installdir)/libmozjs.so $(DESTDIR)$(sdkdir)/sdk/lib/libmozjs.so
+	ln -s $(installdir)/libxpcom.so $(DESTDIR)$(sdkdir)/sdk/lib/libxpcom.so
+	ln -s $(installdir)/libxul.so $(DESTDIR)$(sdkdir)/sdk/lib/libxul.so
 	$(RM) -f $(DESTDIR)$(sdkdir)/lib $(DESTDIR)$(sdkdir)/bin $(DESTDIR)$(sdkdir)/sdk/include $(DESTDIR)$(sdkdir)/include $(DESTDIR)$(sdkdir)/sdk/idl $(DESTDIR)$(sdkdir)/idl
 	ln -s $(sdkdir)/sdk/lib $(DESTDIR)$(sdkdir)/lib
 	ln -s $(installdir) $(DESTDIR)$(sdkdir)/bin
 	ln -s $(includedir)/stable $(DESTDIR)$(sdkdir)/sdk/include
-	ln -s $(includedir)/unstable $(DESTDIR)$(sdkdir)/include
+	ln -s $(includedir) $(DESTDIR)$(sdkdir)/include
 	ln -s $(idldir)/stable $(DESTDIR)$(sdkdir)/sdk/idl
-	ln -s $(idldir)/unstable $(DESTDIR)$(sdkdir)/idl
+	ln -s $(idldir) $(DESTDIR)$(sdkdir)/idl
 endif # INSTALL_SDK
 
 make-sdk:
